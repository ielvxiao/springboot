<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lvxiao.dao.employee.EmployeeDao">
    <!--eviction是缓存的淘汰算法，可选值有"LRU"、"FIFO"、"SOFT"、"WEAK"，缺省值是LRU-->
    <!--flashInterval指缓存过期时间，单位为毫秒，60000即为60秒，缺省值为空，即只要容量足够，永不过期-->
    <!--size指缓存多少个对象，默认值为1024-->
    <!--readOnly是否只读，如果为true，则所有相同的sql语句返回的是同一个对象（有助于提高性能，但并发操作同一条数据时，可能不安全），如果设置为false，则相同的sql，后面访问的是cache的clone副本。-->
    <!--blocking： 若缓存中找不到对应的key，是否会一直blocking，直到有对应的数据进入缓存。-->
    <!--<cache type="com.example.cache.MybatisRedisCache"/>-->
    <resultMap id="employeeMap" type="com.lvxiao.domain.Employee">
        <result column="emp_no" jdbcType="BIGINT" property="empNo" />
        <result column="birth_date" jdbcType="DATE" property="birthDate" />
        <result column="first_name" jdbcType="VARCHAR" property="firstName" />
        <result column="last_name" jdbcType="VARCHAR" property="lastName" />
        <result column="gender" jdbcType="VARCHAR" property="gender" />
        <result column="hire_date" jdbcType="DATE" property="hireDate" />
    </resultMap>

    <select id="selectAllEmployees" resultMap="employeeMap">
        select * from employees
    </select>

    <select id="selectEmployeeById" resultMap="employeeMap" >
        select * from employees where emp_no=#{id}
    </select>
    <select id="test" resultMap="employeeMap" >
        select * from employees where emp_no=#{id}
    </select>
    <select id="selectEmployeeByIds" resultMap="employeeMap">
        select * from employees where emp_no in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>